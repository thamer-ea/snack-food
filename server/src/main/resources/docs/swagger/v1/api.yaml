openapi: "3.0.0"
info:
  title: Snack Food
  description: Snack Food API Documentation
  version: "1.0.0"
servers:
- url: http://localhost:8080/api/v1
paths:
  /ingredients:
    get:
      summary: Retrieve all ingredients
      tags:
      - Ingredients
      parameters:
      - in: query
        name: size
        schema:
          type: integer
          default: 1000
        description: The number of ingredients to return.
        required: false
      - in: query
        name: page
        schema:
          type: integer
          default: 0
        description: Offset.
        required: false
      responses:
        200:
          description: The ingredients list.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Ingredient"
        204:
          description: No content.
        500:
          description: Internal Server Error.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseError"
  /orders:
    get:
      summary: Retrieve all orders
      tags:
      - Orders
      parameters:
      - in: query
        name: size
        schema:
          type: integer
          default: 1000
        description: The number of orders to return.
        required: false
      - in: query
        name: page
        schema:
          type: integer
          default: 0
        description: Offset.
        required: false
      responses:
        200:
          description: The Order list.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Order"
        204:
          description: No content.
        500:
          description: Internal Server Error.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseError"
    post:
      summary: Create an order
      tags:
      - Orders
      requestBody:
        description: Order to be created.
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/NewOrder"
      responses:
        200:
          description: The Order list.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Order"
        400:
          description: Bad request. Missing required field or invalid value.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseError"
        404:
          description: Snack or ingredient not found.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseError"
        500:
          description: Internal Server Error.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseError"
  /snacks:
    get:
      summary: Retrieve all snacks
      tags:
      - Snacks
      parameters:
      - in: query
        name: size
        schema:
          type: integer
          default: 1000
        description: The number of snacks to return.
        required: false
      - in: query
        name: page
        schema:
          type: integer
          default: 0
        description: Offset.
        required: false
      responses:
        200:
          description: The snacks list.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Snack"
        204:
          description: No content.
        500:
          description: Internal Server Error.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseError"
components:
  schemas:
    Ingredient:
      properties:
        id:
          type: string
          format: uuid
          description: The ingredient unique identification.
        name:
          type: string
          description: Name of the ingredient.
        price:
          type: number
          description: Price of the ingredient.
    Order:
      properties:
        id:
          type: string
          format: uuid
          description: The Order unique identification.
        customer:
          type: string
          description: Name of the customer.
        snacks:
          type: array
          description: The list of snacks.
          items:
            type: object
            properties:
              snack:
                $ref: '#/components/schemas/Snack'
              quantity:
                type: number
                description: The quantity of the snack.
              price:
                type: number
                description: The snack price.
        customSnacks:
          type: array
          description: The list of custom snacks.
          items:
            type: object
            properties:
              ingredients:
                type: array
                description: The ingredients of the custom snack
                items:
                  type: object
                  properties:
                    ingredient:
                      $ref: '#/components/schemas/Ingredient'
                    quantity:
                      type: number
                      description: The quantity of the ingredient.
              quantity:
                type: number
                description: The quantity of the custom snack.
              price:
                type: number
                description: The custom snack price.
        totalPrice:
          type: number
          description: The order price.
    NewOrder:
      properties:
        customer:
          type: string
          description: Name of the customer.
        snacks:
          type: array
          description: The list of snacks IDs.
          items:
            type: object
            properties:
              id:
                type: string
                format: uuid
                description: The snack ID.
              quantity:
                type: number
                description: The quantity of the snack.
        customSnacks:
          type: array
          description: The list of custom snacks.
          items:
            type: object
            properties:
              ingredients:
                type: array
                description: The ingredients of the custom snack
                items:
                  type: object
                  properties:
                    id:
                      type: string
                      format: uuid
                      description: The ingredient ID.
                    quantity:
                      type: number
                      description: The quantity of the ingredient.
              quantity:
                type: number
                description: The quantity of the snack.
    Snack:
      properties:
        id:
          type: string
          format: uuid
          description: The Snack unique identification.
        name:
          type: string
          description: Name of the snack.
        ingredients:
          type: array
          description: The ingredients of the snack
          items:
            type: object
            properties:
              ingredient:
                $ref: '#/components/schemas/Ingredient'
              quantity:
                type: number
                description: The quantity of the ingredient.
        price:
          type: number
          description: The snack price.
    ResponseError:
      properties:
        message:
          type: string
          description: Message that describes an error event.

